{"version":3,"sources":["../src/app.js"],"names":["app","port","process","env","PORT","frontend","path","join","__dirname","use","express","bodyParser","urlencoded","extended","json","AuthRoutes","UserRoutes","AdminRoutes","get","req","res","message","all","status","code","listen","console","log","server"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAVA;;AACA;AAYA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACA,IAAMC,QAAQ,GAAGC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAjB;;AACAR,GAAG,CAACS,GAAJ,CAAQC,8BAAeL,QAAf,CAAR,E,CAGA;;AACAL,GAAG,CAACS,GAAJ,CAAQ,uBAAR;AACAT,GAAG,CAACS,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAT,GAAG,CAACS,GAAJ,CAAQE,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAb,GAAG,CAACS,GAAJ,CAAQE,uBAAWG,IAAX,EAAR;AACAd,GAAG,CAACS,GAAJ,CAAQC,8BAAe,QAAf,CAAR;AACAV,GAAG,CAACS,GAAJ,CAAQ,cAAR,EAAwBM,sBAAxB;AACAf,GAAG,CAACS,GAAJ,CAAQ,wBAAR,EAAkCO,sBAAlC;AACAhB,GAAG,CAACS,GAAJ,CAAQ,eAAR,EAAyBQ,uBAAzB,E,CAEA;;AACAjB,GAAG,CAACkB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACN,IAAJ,CAAS;AAAEO,IAAAA,OAAO,EAAE;AAAX,GAAT;AACD,CAFD,E,CAIA;;AACArB,GAAG,CAACsB,GAAJ,CAAQ,GAAR,EAAa,UAACH,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AAC9CS,IAAAA,MAAM,EAAE,OADsC;AAE9CC,IAAAA,IAAI,EAAE,GAFwC;AAG9CH,IAAAA,OAAO,EAAE;AAHqC,GAArB,CAAd;AAAA,CAAb;AAMArB,GAAG,CAACyB,MAAJ,CAAWxB,IAAX,EAAiB,YAAM;AACrByB,EAAAA,OAAO,CAACC,GAAR,4CAAgD1B,IAAhD;AACD,CAFD;AAIO,IAAM2B,MAAM,GAAG5B,GAAf;;eACQA,G","sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-console */\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport logger from 'morgan';\r\nimport path from 'path';\r\nimport AuthRoutes from './routes/authRoutes';\r\nimport UserRoutes from './routes/userRoutes';\r\nimport AdminRoutes from './routes/adminRoutes';\r\n\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3010;\r\n\r\n// Deployment\r\nconst frontend = path.join(__dirname, '../public');\r\napp.use(express.static(frontend));\r\n\r\n\r\n// Middlewares\r\napp.use(cors());\r\napp.use(logger('dev'));\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\napp.use(express.static('public'));\r\napp.use('/api/v1/auth', AuthRoutes);\r\napp.use('/api/v1/users/requests', UserRoutes);\r\napp.use('/api/v1/admin', AdminRoutes);\r\n\r\n// Test good route\r\napp.get('/', (req, res) => {\r\n  res.json({ message: 'welcome to the maintenance tracker app api/v1' });\r\n});\r\n\r\n// Invalid Routes\r\napp.all('*', (req, res) => res.status(404).json({\r\n  status: 'error',\r\n  code: 404,\r\n  message: 'Route unavailable on server.',\r\n}));\r\n\r\napp.listen(port, () => {\r\n  console.log(`SERVER IS UP AND RUNNING ON PORT ${port}`);\r\n});\r\n\r\nexport const server = app;\r\nexport default app;\r\n"],"file":"app.js"}